version: "3.8"

services:
  mongodb:
    image: mongo:7.0.11
    restart: unless-stopped
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_ADMIN_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_ADMIN_PASSWORD
      MONGO_INITDB_DATABASE: init_db
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    healthcheck:
        test: ["CMD", "mongosh",  "--eval \"db.adminCommand('ping')\""]
        interval: "1s"
        retries: 10
  
  mongo_migration_client:
    image: mongo:7.0.11
    networks:
        - app-network
    command: ["bin/bash", "-c",  "until mongosh -u $MONGODB_ADMIN_USER -p $MONGODB_ADMIN_PASSWORD admin \
      --host mongodb --eval 'printjson(db.serverStatus())' > /dev/null; do 
        echo \"waiting for mongo boot finish.\" 
        sleep 1; 
      done && mongosh --quiet --host mongodb -u $MONGODB_ADMIN_USER -p $MONGODB_ADMIN_PASSWORD admin \ 
        --authenticationDatabase admin \
        --eval \"if (db.system.users.find({user:'$MONGODB_USER'}).count() == 0) { db.getSiblingDB('$MONGODB_DATABASE').createUser({user:'$MONGODB_USER', pwd:'$MONGODB_PASSWORD', roles:[{role:'readWrite', db:'$MONGODB_DATABASE'}]});  }\""]
    depends_on:
      mongodb:
        condition: service_healthy

  app:
    image: $APP_IMAGE_TAG
    container_name: nodeapp
    depends_on:
      mongo_migration_client:
        condition: service_completed_successfully
      mongodb:
        condition: service_healthy
    build: 
      context: ./app
      args:
        app_build_verion: localbuild
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      DB_HOST: mongodb
      DB_USER: $MONGODB_USER
      DB_PASSWORD: $MONGODB_PASSWORD
      DB_NAME: $MONGODB_DATABASE
      DB_PORT: $MONGODB_DOCKER_PORT

networks:
  app-network:
    name: app-network
