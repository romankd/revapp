version: "3.8"

services:
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_ADMIN_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_ADMIN_PASSWORD
      MONGO_INITDB_DATABASE: init_db
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    healthcheck:
        test: ["CMD", "mongosh",  "--eval \"db.adminCommand('ping')\""]
        interval: "1s"
        retries: 10
  
  mongo_migration_client:
    image: mongo:5.0.2
    env_file: ./.env
    networks:
        - app-network
    command: mongosh --host mongodb -u $MONGODB_ADMIN_USER -p $MONGODB_ADMIN_PASSWORD init_db --authenticationDatabase admin --eval "db.getSiblingDB('$MONGODB_DATABASE').createUser({user:'$MONGODB_USER', pwd:'$MONGODB_PASSWORD', roles:[{role:'readWrite',db:'$MONGODB_DATABASE'}]});"
    depends_on:
      mongodb:
        condition: service_healthy

  app:
    container_name: nodeapp
    depends_on:
      mongo_migration_client:
        condition: service_completed_successfully
      mongodb:
        condition: service_healthy
    build: ./app
    restart: unless-stopped
    env_file: ./.env
    networks:
      - app-network
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      DB_HOST: mongodb
      DB_USER: $MONGODB_USER
      DB_PASSWORD: $MONGODB_PASSWORD
      DB_NAME: $MONGODB_DATABASE
      DB_PORT: $MONGODB_DOCKER_PORT
    stdin_open: true
    tty: true

networks:
  app-network:
    name: app-network