apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mongodb.fullname" . }}
  namespace: dev
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  serviceName: "mongo"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "mongodb.labels" . | nindent 8 }}
    spec:
      securityContext:
        runAsRoot: false
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
      containers:
        - name: mongo-sidecar
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: mongodb-boot
              mountPath: /opt
          env:
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: initdb
                  name: mongodb-secret
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: mongo-db
                  name: mongodb-secret
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongo-user
                  name: mongodb-secret
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongo-password
                  name: mongodb-secret
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICENAME
              value: {{ include "mongodb.fullname" . }}
          command: ["/bin/bash", "-c", "/opt/initialization.sh && tail -f /dev/null"]
        - name: mongo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          startupProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 1
            periodSeconds: 30
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 1
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: mongo-admin
                  name: mongodb-secret
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongo-admin-password
                  name: mongodb-secret
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: initdb
                  name: mongodb-secret
          command:
            - mongod
            - "--bind_ip_all"
            - --config=/etc/mongo/mongodb.conf
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /etc/mongo
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
            items:
              - key: mongodb.conf
                path: mongodb.conf
        - name: mongodb-boot
          configMap:
            name: mongodb-boot
            defaultMode: 0010
            items:
              - key: initialization.sh
                path: initialization.sh
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Mi
