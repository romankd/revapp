name: Main branch workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CACHE_PATH: /tmp/.buildx-cache
  # TRIVY_CACHE_PATH: /tmp/.trivy-cache
  # TRIVY_IMAGE_VERSION: 0.49.1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: v0.13.1

    - name: Cache Docker
      id: cache_docker
      if: ${{ success() }}
      uses: actions/cache@v4
      with:
        path: ${{ env.CACHE_PATH }}
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Docker image build
      if: ${{ success() }}
      run: |
        docker buildx build --load  \
          -t romankd/nodeapp:${{ github.run_id }} --cache-to=type=local,dest=${{ env.CACHE_PATH }} \
          --cache-from=type=local,src=${{ env.CACHE_PATH }} \
          -f ./containers/app/Dockerfile ./containers/app
    
    - name: Docker compose up
      if: ${{ success() }}
      run: |
        docker compose up \
          --env APP_IMAGE_TAG=romankd/nodeapp:${{ github.run_id }} \
          --env MONGODB_LOCAL_PORT=27017 \
          --env MONGODB_DOCKER_PORT=27017 \
          --env MONGODB_DATABASE=users \
          --env MONGODB_USER=${{ secrets.MONGODB_USER }} \
          --env MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} \
          --env NODE_LOCAL_PORT=3000 \
          --env NODE_DOCKER_PORT=3000 \
          --env MONGODB_ADMIN_USER=${{ secrets.MONGODB_ADMIN_USER }} \
          --env MONGODB_ADMIN_PASSWORD=${{ secrets.MONGODB_ADMIN_PASSWORD }}
    
    # - name: Compose the services
    #   uses: adambirds/docker-compose-action@v1.3.0
    #   with:
    #     compose-file: "./containers/docker-compose.yaml"
    #     down-flags: "--volumes"
    #     # test-container: nodeapp
    #     # test-command: "npm test"
    #   env:
    #     #NODE_ENV: "dev"
    #     MONGODB_LOCAL_PORT: 27017
    #     MONGODB_DOCKER_PORT: 27017
    #     MONGODB_DATABASE: users
    #     MONGODB_USER: ${{ secrets.MONGODB_USER }}
    #     MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
    #     NODE_LOCAL_PORT: 3000
    #     NODE_DOCKER_PORT: 3000
    #     MONGODB_ADMIN_USER: ${{ secrets.MONGODB_ADMIN_USER }}
    #     MONGODB_ADMIN_PASSWORD: ${{ secrets.MONGODB_ADMIN_PASSWORD }}
    
    - name: Running tests in Docker
      if: ${{ success() }}
      run: docker exec nodeapp npm test

    # - name: Docker image build
    #   if: ${{ success() }}
    #   run: |
    #     docker buildx build --load --build-arg YQ_VERSION=${{ vars.YQ_VERSION }} \
    #       -t romankd/nodeapp:${{ github.run_id }} --cache-to=type=local,dest=${{ env.CACHE_PATH }} \
    #       --cache-from=type=local,src=${{ env.CACHE_PATH }} \
    #       -f ./docker-app/Dockerfile ./docker-app

    # - name: Test the Docker image with Trivy
    #   if: ${{ success() }}
    #   run: |
    #     docker run --rm -v ${{ env.TRIVY_CACHE_PATH }}:/root/.cache/ \
    #       -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:${{ env.TRIVY_IMAGE_VERSION }} image romankd/zscaler-pyapp:${{ github.run_id }} \
    #       --severity HIGH,CRITICAL --exit-code 1
    
    # - name: Sending results of failure to slack
    #   if: failure()
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.25.0
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    #Docker push
    #Create release on success